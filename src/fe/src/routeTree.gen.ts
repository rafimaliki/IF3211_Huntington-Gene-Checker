/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplatImport } from './routes/$'
import { Route as IndexImport } from './routes/index'
import { Route as TeamIndexImport } from './routes/team/index'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as CheckerIndexImport } from './routes/checker/index'
import { Route as AboutIndexImport } from './routes/about/index'

// Create/Update Routes

const SplatRoute = SplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIndexRoute = TeamIndexImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

const CheckerIndexRoute = CheckerIndexImport.update({
  id: '/checker/',
  path: '/checker/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/checker/': {
      id: '/checker/'
      path: '/checker'
      fullPath: '/checker'
      preLoaderRoute: typeof CheckerIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
    '/team/': {
      id: '/team/'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutIndexRoute
  '/checker': typeof CheckerIndexRoute
  '/home': typeof HomeIndexRoute
  '/team': typeof TeamIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about': typeof AboutIndexRoute
  '/checker': typeof CheckerIndexRoute
  '/home': typeof HomeIndexRoute
  '/team': typeof TeamIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/about/': typeof AboutIndexRoute
  '/checker/': typeof CheckerIndexRoute
  '/home/': typeof HomeIndexRoute
  '/team/': typeof TeamIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$' | '/about' | '/checker' | '/home' | '/team'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$' | '/about' | '/checker' | '/home' | '/team'
  id: '__root__' | '/' | '/$' | '/about/' | '/checker/' | '/home/' | '/team/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  AboutIndexRoute: typeof AboutIndexRoute
  CheckerIndexRoute: typeof CheckerIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  TeamIndexRoute: typeof TeamIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  AboutIndexRoute: AboutIndexRoute,
  CheckerIndexRoute: CheckerIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  TeamIndexRoute: TeamIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$",
        "/about/",
        "/checker/",
        "/home/",
        "/team/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/checker/": {
      "filePath": "checker/index.tsx"
    },
    "/home/": {
      "filePath": "home/index.tsx"
    },
    "/team/": {
      "filePath": "team/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
